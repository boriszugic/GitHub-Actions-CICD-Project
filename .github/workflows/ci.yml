name: CI

on:
  pull_request:
  workflow_dispatch:

env:
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

jobs:
  tests-and-scans:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # 2) unit tests
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: install deps & run tests
      run: |
        pip install -r requirements.txt
        pytest

    # 3) secret scan
    - uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 4) SonarQube QualityÂ Gate
    - uses: SonarSource/sonarqube-scan-action@v2
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.organization=${{ secrets.SONAR_ORG }}
          -Dsonar.qualitygate.wait=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ env.SONAR_HOST_URL }}

    # 5) Build local image for Trivy scan
    - name: Build Docker image
      run: |
        docker build -t local-image:${{ github.sha }} .

    # 6) Trivy vulnerability scan
    - uses: aquasecurity/trivy-action@0.31.0
      with:
        image-ref: local-image:${{ github.sha }}
        severity: 'CRITICAL,HIGH'
        exit-code: '0'
